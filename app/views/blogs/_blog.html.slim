article.card.blog id="blog_#{blog.id}"
  .card-image
    - if blog.picture.present?
      = retina_image_tag blog.picture, :image, :large, class: 'materialboxed'

    - if can? :read, blog
      = link_to category_blog_path(blog.category, blog), class: 'btn-floating btn-large halfway-fab waves-effect waves-light green' do
        i.material-icons visibility

  .card-content
    => link_to blog.category_name, category_blogs_path(blog.category), class: 'chip orange left'
    h3.card-title
      / TODO: Use a decorator to handle this condition
      - if params[:term].present? && blog.search_highlights[:title].present?
        =< link_to blog.search_highlights[:title].html_safe, category_blog_path(blog.category, blog)
      - else
        =< link_to blog.title, category_blog_path(blog.category, blog)
    .clearfix

    span.timestamps = I18n.l(blog.created_at, format: :long)
    p = raw blog.tag_list.map { |t| link_to t, tag_path(t), class: 'chip' }.join(' ')

    / TODO: Use a decorator to handle this condition
    - if params[:term].present? && blog.search_highlights[:content].present?
      == blog.search_highlights[:content]
    - else
      == blog.content

  .card-action
    .left
      .chip<
        = retina_image_tag blog.user, :avatar, :small
        =< blog.user.username

      span.new.badge data-badge-caption=t(:comments, count: blog.comments_count) = blog.comments_count


    .right
      =< link_to 'Modifier', edit_category_blog_path(blog.category, blog) if can? :update, blog

      =< link_to 'Supprimer', blog, data: { confirm: 'Etes-vous sÃ»r ?' }, method: :delete if can? :destroy, blog

  script type="application/ld+json"
    = jsonld_blog(blog)
